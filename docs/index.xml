<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azkarra Streams – Azkarra Streams - Framework</title>
    <link>https://streamthoughts.github.io/azkarra-streams/</link>
    <description>Recent content in Azkarra Streams - Framework on Azkarra Streams</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://streamthoughts.github.io/azkarra-streams/index.xml" rel="self" type="application/rss+xml" />
    
    
      
      
    
    
    <item>
      <title>Blog: Azkarra Streams 0.9.0 release 🚀</title>
      <link>https://streamthoughts.github.io/azkarra-streams/blog/2021/03/11/azkarra-streams-0.9.0-release/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/azkarra-streams/blog/2021/03/11/azkarra-streams-0.9.0-release/</guid>
      <description>
        
        
        &lt;p&gt;A few days ago we released &lt;a href=&#34;https://www.azkarrastreams.io/&#34;&gt;Azkarra&lt;/a&gt; Streams V0.9, and like every new release, it brings new features that make it easier to develop streams processing applications based on &lt;a href=&#34;https://kafka.apache.org/documentation/streams/&#34;&gt;Kafka Streams&lt;/a&gt;. This version also represents a milestone since it includes important changes to Azkarra’s internal and public APIs in order to prepare the next steps of the project.&lt;/p&gt;
&lt;p&gt;This blog post summarizes the most important improvements.&lt;/p&gt;
&lt;h2 id=&#34;kafka-streams-memory-management&#34;&gt;Kafka Streams Memory Management&lt;/h2&gt;
&lt;p&gt;Kafka Streams uses &lt;a href=&#34;https://rocksdb.org/&#34;&gt;RocksDB&lt;/a&gt; for maintaining internal state stores. Usually, and depending on the number of states and the data throughput your application have to managed, it can be necessary to change the default settings of internal RocksDB instances. These can be specified through the rocksdb.config.setter configuration and the implementation of the RocksDBConfigSetter interface.&lt;/p&gt;
&lt;p&gt;This release provides a new default &lt;a href=&#34;https://www.azkarrastreams.io/docs/developer-guide/rocksdb/&#34;&gt;AzkarraRocksDBConfigSetter&lt;/a&gt; class that allows advanced RocksDB tuning and helps to control the total memory usage across all instances.&lt;/p&gt;
&lt;p&gt;For example, the configuraton below shows how to configure a block-cache size of 256MB shared across all RocksDB instances with a Write-Buffer-Manager of block.cache.size * 0.5.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-hocon&#34; data-lang=&#34;hocon&#34;&gt;azkarra {
 streams {
  rocksdb.memory.managed = true
  rocksdb.memory.write.buffer.ratio = 0.5
  rocksdb.memory.high.prio.pool.ratio = 0.1
  rocksdb.block.cache.size = 268435456
 }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For more information about how to configure RocksDB you can follow the official &lt;a href=&#34;https://github.com/facebook/rocksdb/wiki/RocksDB-Tuning-Guide&#34;&gt;Tuning Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;monitoring-state-store-recovery-process&#34;&gt;Monitoring State Store Recovery Process&lt;/h2&gt;
&lt;p&gt;Azkarra now automatically configures a LoggingStateRestoreListener which logs and captures the states of the restoration process for each store. In addition, those information are exposed through the REST endpoint GET /api/v1/streams/:id/stores :&lt;/p&gt;
&lt;p&gt;Example (JSON response):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Count&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;partition_restore_infos&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;starting_offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ending_offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;total_restored&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;duration&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PT0.102756S&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;partition&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;topic&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;complex-word-count-topology-0-10-0-s-n-a-p-s-h-o-t-Count-changelog&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;partition_lag_infos&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;partition&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;current_offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;log_end_offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;offset_lag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;exporting-kafka-streams-states-anywhere&#34;&gt;Exporting Kafka Streams States Anywhere&lt;/h2&gt;
&lt;p&gt;Since Azkarra v0.7, you can use the&lt;a href=&#34;https://www.azkarrastreams.io/docs/developer-guide/streamslifecycleinterceptors/&#34;&gt;StreamsLifecycleInterceptor&lt;/a&gt; so-called&lt;a href=&#34;https://www.azkarrastreams.io/docs/developer-guide/streamslifecycleinterceptors/#86-monitoringstreamsinterceptor&#34;&gt;MonitoringStreamsInterceptor&lt;/a&gt; that periodically publishes the state of your KafkaStreams instance, directly into a Kafka Topic, in the form of events that adhere to the &lt;a href=&#34;https://cloudevents.io/&#34;&gt;CloudEvents&lt;/a&gt; specification.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.azkarrastreams.io/docs/developer-guide/streamslifecycleinterceptors/#86-monitoringstreamsinterceptor&#34;&gt;MonitoringStreamsInterceptor&lt;/a&gt; has been enhanced so that you can more easily report the states of your instances in third-party systems other than Kafka (e.g., DataDog). For this, Azkarra v0.9 introduces the new pluggable interface MonitoringReporter. Custom reporters can be configured through the monitoring.streams.interceptors.reporters property or declared as components.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Component&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ConsoleMonitoringReporter&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;implements&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MonitoringRepoter&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;report&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KafkaStreamMetadata&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Monitored KafkaStreams: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;azkarra-dashboard&#34;&gt;Azkarra Dashboard&lt;/h2&gt;
&lt;p&gt;The UI of Azkarra Dashboard has been polished to provide a better user experience. In addition, a new tab has been added to get direct access to the state stores lag and offsets, as well as, information about their recovery process.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://streamthoughts.github.io/azkarra-streams/images/azkarra-streams-overview.gif&#34; alt=&#34;Azkarra Streams — Dashboard —v0.9.0&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;azkarra-api-changes&#34;&gt;Azkarra API Changes&lt;/h2&gt;
&lt;h3 id=&#34;localstreamsexecutionenvironment&#34;&gt;LocalStreamsExecutionEnvironment&lt;/h3&gt;
&lt;p&gt;This new release makes some changes to the Azkarra Low-Level APIs, including the existing StreamsExecutionEnvironment interface. Specifically, the DefaultStreamsExecutionEnvironment has been replaced by newLocalStreamsExecutionEnvironment class which is used to run local KafkaStreams instances.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;LocalStreamsExecutionEnvironment&lt;/span&gt;
 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                                                
 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;registerTopology&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;WordCountTopologyProvider&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;Executed&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;as&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;wordcount&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Currently, these changes do not directly impact applications developed with Azkarra. Indeed, they were motivated by the aim to bring in a future version additional implementations that will allow deploying and managing Azkarra instances running remotely, i.e., in Kubernetes :)&lt;/p&gt;
&lt;h3 id=&#34;azkarra-client&#34;&gt;Azkarra Client&lt;/h3&gt;
&lt;p&gt;Additionally, Azkarra 0.9 introduces a new module named azkarra-client that provides a simple Java Client API for Azkarra Streams, generated through the &lt;a href=&#34;https://swagger.io/specification/&#34;&gt;OpenAPI Specification&lt;/a&gt;. Currently, the Client API is already used by Azkarra itself for executing remote Interactive Queries and will be leveraged in future versions to manage complete remote Azkarra instances.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;KafkaStreamsContainerAware&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Azkarra provides the new interface KafkaStreamsContainerAware that can be implemented by classes implementing :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;org.apache.kafka.streams.KafkaStreams.StateListener&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;org.apache.kafka.streams.processor.StateRestoreListener&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;io.streamthoughts.azkarra.api.streams.kafkaStreamsFactory&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;support-for-apache-kafka-27&#34;&gt;Support for Apache Kafka 2.7&lt;/h2&gt;
&lt;p&gt;Finally, Azkarra Streams is always built on the most recent version of Kafka. Therefore, this new release adds support for version 2.7.&lt;/p&gt;
&lt;h2 id=&#34;join-the-azkarra-streams-community-on-slack&#34;&gt;Join the Azkarra Streams community on Slack&lt;/h2&gt;
&lt;p&gt;The Azkarra project has a dedicated Slack to help and discuss the community. &lt;a href=&#34;https://communityinviter.com/apps/azkarra-streams/azkarra-streams-community&#34;&gt;Join Us!&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I would like to thank you, the early adopters of Azkarra who, through their feedback and support, help the project to become more and more robust after each new version.&lt;/p&gt;
&lt;p&gt;Please, share this article if you like this project. You can even add a ⭐ to the GitHub repository to support us.&lt;/p&gt;
&lt;p&gt;Also, the project is open for contributions. So feel free to propose your ideas or project needs and of course to create pull requests (PR).&lt;/p&gt;
&lt;p&gt;Thank you very much&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Release v0.9.0</title>
      <link>https://streamthoughts.github.io/azkarra-streams/blog/2021/03/03/release-v0.9.0/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/azkarra-streams/blog/2021/03/03/release-v0.9.0/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Azkarra Streams v0.9.0 is now available!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Below is a summary of the issues addressed in the 0.9.0 release of Azkarra Streams.&lt;/p&gt;
&lt;h2 id=&#34;new-features&#34;&gt;New Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/689a9e3&#34;&gt;689a9e3&lt;/a&gt; feat(ui): enhance Azkarra UI to display the raw string topology description (#126)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/3bdaadb&#34;&gt;3bdaadb&lt;/a&gt; feat(runtime): enhance MonitoringStreamsInterceptor to support pluggable reporters (#124)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/9d844f3&#34;&gt;9d844f3&lt;/a&gt; feat(all): add new tab for displaying state store offsets and lags in Azkarra UI (#123)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/1d9d3ad&#34;&gt;1d9d3ad&lt;/a&gt; feat(runtime): add a default StateRestoreListener to provide custom KafkaStreams states (#121)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/20a7965&#34;&gt;20a7965&lt;/a&gt; feat(api/runtime): add new interface KafkaStreamsContainerAware (#120)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/7fa4bce&#34;&gt;7fa4bce&lt;/a&gt; feat(all): fix and move AzkarraRocksDBConfigSetter to azkarra-commons module (#116)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d8980ef&#34;&gt;d8980ef&lt;/a&gt; feat(ui/client): enhance UI and fix azkarra-client build&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/3401c86&#34;&gt;3401c86&lt;/a&gt; feat(api): allow more fine-tuning of RocksDB instances (#116)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/c6c8d64&#34;&gt;c6c8d64&lt;/a&gt; feat(streams): add StreamsConfigEntryLoader&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/eed9aa9&#34;&gt;eed9aa9&lt;/a&gt; feat(client): add Java Client for Azkarra&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/4f67fc6&#34;&gt;4f67fc6&lt;/a&gt; feat(all): refactor and add new endpoints for topologies&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/acb82f5&#34;&gt;acb82f5&lt;/a&gt; feat(api): allow to configure maxBlockingTime on EventStream&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;improvements-and-bug-fixes&#34;&gt;Improvements and Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/f97bd55&#34;&gt;f97bd55&lt;/a&gt; fix(api): add missing method withBlockCacheSize to RocksDBConfig&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/ba57b14&#34;&gt;ba57b14&lt;/a&gt; refactor(api/runtime): set default environment name for LocalStreamsExecutionEnvironment&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d63ad8e&#34;&gt;d63ad8e&lt;/a&gt; fix(commons): fix resources is not reallocated when stream is restarted&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/0a71b8e&#34;&gt;0a71b8e&lt;/a&gt; fix(commons): fix NPE LoggingStateRestoreListener&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/2064b6d&#34;&gt;2064b6d&lt;/a&gt; fix(runtime): fix producer already closed MonitoringReporter&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/b390c62&#34;&gt;b390c62&lt;/a&gt; fix(runtime): fix breaking change due to random container id&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/a5c5100&#34;&gt;a5c5100&lt;/a&gt; fix(api): remove deprecated class ConfBuilder&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/4bce06e&#34;&gt;4bce06e&lt;/a&gt; fix(ui): add a visited map to prevent duplicate node from showing up&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/471c3d1&#34;&gt;471c3d1&lt;/a&gt; fix(server): enforce content-type to JSON for ExceptionMapper&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/36f0bb0&#34;&gt;36f0bb0&lt;/a&gt; fix(server): fix Kafka Streams metric values should be returned with content-type text/plain (#125)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/c4b80c4&#34;&gt;c4b80c4&lt;/a&gt; fix(ui): fix authentication modale does not show up&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/4ea170b&#34;&gt;4ea170b&lt;/a&gt; fix(streams): fix regression on server configuration&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/74a4502&#34;&gt;74a4502&lt;/a&gt; fix(api/runtime): fix IllegalStateException when providing KafkaStreamFactory (#119)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/456ece2&#34;&gt;456ece2&lt;/a&gt; fix(metrics): fix missing @component on ConfigEntryLoader&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/a5c5100&#34;&gt;a5c5100&lt;/a&gt; fix(api): remove deprecated class ConfBuilder&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/781a800&#34;&gt;781a800&lt;/a&gt; fix(ui/runtime): cleanup UI and fix local container&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;subtasks&#34;&gt;Sub-Tasks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/0cc9862&#34;&gt;0cc9862&lt;/a&gt; deps(all): bump kafka streams version to 2.7.x #117&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/78ce9f4&#34;&gt;78ce9f4&lt;/a&gt; refactor(all): extract RestApiQueryCall&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/21ffbc0&#34;&gt;21ffbc0&lt;/a&gt; sub-taks(all): refactor StreamsExecutionEnvironment&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/554c4ae&#34;&gt;554c4ae&lt;/a&gt; sub-task(all): refator Azkarra API to support mutliple containers for a same application per environment&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/61a2d14&#34;&gt;61a2d14&lt;/a&gt; refactor(api): refactor API to query state stores&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/8259fe1&#34;&gt;8259fe1&lt;/a&gt; refactor(all): refactor StreamsExecutionEnvironment interface to support additional implementations&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/ae4b9be&#34;&gt;ae4b9be&lt;/a&gt; refactor(server): extract new interface InteractiveQueryService&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/12e1d78&#34;&gt;12e1d78&lt;/a&gt; refactor(all): extract interface ComponentScanner&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Release v0.8.0</title>
      <link>https://streamthoughts.github.io/azkarra-streams/blog/2020/09/24/release-v0.8.0/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/azkarra-streams/blog/2020/09/24/release-v0.8.0/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Azkarra Streams v0.8.0 is now available!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Below is a summary of the issues addressed in the 0.8.0 release of Azkarra Streams.&lt;/p&gt;
&lt;h2 id=&#34;new-features&#34;&gt;New Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/48c856e&#34;&gt;*48c856e&lt;/a&gt; feat(runtime): add exclude topics to WaitForSourceTopicsInterceptor (#83)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/2922f0e&#34;&gt;2922f0e&lt;/a&gt; feat(runtime): add timeout option to WaitForSourceTopicsInterceptor (#82)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/c8af92c&#34;&gt;c8af92c&lt;/a&gt; feat(runtime): update MonitoringStreamsInterceptor to report state offset lags (#103)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/f7eae4e&#34;&gt;f7eae4e&lt;/a&gt; feat(runtime): add new KafkaBrokerReadyInterceptor (#51)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/a0e7cbd&#34;&gt;a0e7cbd&lt;/a&gt; feat(api/server): add support for HTTP Server-Sent Event (#100)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d19949f&#34;&gt;d19949f&lt;/a&gt; feat(server): allow to only return successfull records from IQ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d9a559d&#34;&gt;d9a559d&lt;/a&gt; feat(api): add ConfValue annotation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;improvements-and-bug-fixes&#34;&gt;Improvements and Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/a28ae57&#34;&gt;a28ae57&lt;/a&gt; refactor(api): add new params wait.for.topics.enable&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d6feb38&#34;&gt;d6feb38&lt;/a&gt; refactor(runtime): remove AzkarraContextConfig class (#74)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d383da2&#34;&gt;d383da2&lt;/a&gt; fix(server): load AzkarraRestExtension using external component classLoaders&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/e80a4e5&#34;&gt;e80a4e5&lt;/a&gt; fix(api): exclude Kotlin packages during annotation scan (#107)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/754651d&#34;&gt;754651d&lt;/a&gt; refactor(runtime): refactor AutoCreateTopicsInterceptor to use adminClient created from streams container&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/456f6c5&#34;&gt;456f6c5&lt;/a&gt; fix(server): fix invalid JSON return from GenericRecordSerializer&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/c32ccdb&#34;&gt;c32ccdb&lt;/a&gt; fix(server): fix JSON encoding for avro record with logical-type&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/dcda57a&#34;&gt;dcda57a&lt;/a&gt; refactor(api): clean and improve Annotation resolution&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;subtasks&#34;&gt;Sub-Tasks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/2f49f83&#34;&gt;2f49f83&lt;/a&gt; build(all): bump dependencies versions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/dcdfe2e&#34;&gt;dcdfe2e&lt;/a&gt; refactor(streams): upgrade to Kafka Streams 2.6&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/63af93a&#34;&gt;63af93a&lt;/a&gt; refactor(streams): normalize the method returning Topology&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/04165df&#34;&gt;04165df&lt;/a&gt; build(maven): add wrapper for Maven 3.6.3 (#64)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/05910a7&#34;&gt;05910a7&lt;/a&gt; refactor(api): extract interface from KafkaStreamsContainer&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/6d64b46&#34;&gt;6d64b46&lt;/a&gt; refactor(api/runtime): refactor creation of KafkaStreamsContainer&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/401648c&#34;&gt;401648c&lt;/a&gt; build(deps): bump log4j.version from 2.12.1 to 2.13.3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/7cd68ce&#34;&gt;7cd68ce&lt;/a&gt; refactor(streams): deprecate ConfBuilder in favor to Conf&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Release v0.7.0</title>
      <link>https://streamthoughts.github.io/azkarra-streams/blog/2020/05/11/release-v0.7.0/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/azkarra-streams/blog/2020/05/11/release-v0.7.0/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Azkarra Streams v0.7.0 is now available!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Below is a summary of the issues addressed in the 0.7.0 release of Azkarra Streams.&lt;/p&gt;
&lt;h2 id=&#34;new-features&#34;&gt;New Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/6e9e199&#34;&gt;6e9e199&lt;/a&gt; feat(metrics): add built-in support for Micrometer framework &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/50&#34;&gt;#50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/2891108&#34;&gt;2891108&lt;/a&gt; feat(api): add the capability to eagerly initialize a component&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d6c8eef&#34;&gt;d6c8eef&lt;/a&gt; feat(api): add support for conditional component.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/899ecc8&#34;&gt;899ecc8&lt;/a&gt; feat(api): add support for Secondary component qualifier&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/1c6b7d4&#34;&gt;1c6b7d4&lt;/a&gt; feat(server): add support to register REST extensions &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/63&#34;&gt;#63&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/76146ee&#34;&gt;76146ee&lt;/a&gt; feat(server): add support to register custom jackson modules for KV records &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/61&#34;&gt;#61&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/22d1545&#34;&gt;22d1545&lt;/a&gt; feat(runtime): add new built-in interceptor MonitoringStreamsInterceptor &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/52&#34;&gt;#52&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/d9a12aa&#34;&gt;d9a12aa&lt;/a&gt; feat(ui): add Kafka Streams consumers progression bar &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/58&#34;&gt;#58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/1b888e4&#34;&gt;1b888e4&lt;/a&gt; feat(ui): add new tabs to display consumer-lags &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/58&#34;&gt;#58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/6cc3da7&#34;&gt;6cc3da7&lt;/a&gt; feat(api): add a default ConsumerInterceptor to track consumer consumed/committed offsets &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/58&#34;&gt;#58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/22f4fba&#34;&gt;22f4fba&lt;/a&gt; feat(api): add new Primary annotation to qualify component&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/ac4d5c5&#34;&gt;ac4d5c5&lt;/a&gt; feat(runtime): allow to specify custom UncaughtExceptionHandler strategy &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/55&#34;&gt;#55&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;improvements-and-bug-fixes&#34;&gt;Improvements and Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/6dbed7c&#34;&gt;6dbed7c&lt;/a&gt; refactor(metrics): make MeterRegistryConfigurer interface functional&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/beb0b65&#34;&gt;beb0b65&lt;/a&gt; refactor(runtime): add InvalidStreamsEnvironmentException when environment not found &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/68&#34;&gt;#60&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/f96426c&#34;&gt;f96426c&lt;/a&gt; fix(streams): fix some issues regarding components scan and creation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/02ebc36&#34;&gt;02ebc36&lt;/a&gt; fix(runtime): fix bad delegating methods&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/b7ddf29&#34;&gt;b7ddf29&lt;/a&gt; fix(runtime): prevent topology to start twice when auto.start is enable &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/59&#34;&gt;#59&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/26e589a&#34;&gt;26e589a&lt;/a&gt; fix(server): health status must return DOWN when streams instance stop on failure &lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/54&#34;&gt;#54&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;subtasks&#34;&gt;Sub-Tasks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/eb9d558&#34;&gt;eb9d558&lt;/a&gt; add support for Kafka Streams v2.5.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/commit/ab47b99&#34;&gt;ab47b99&lt;/a&gt; refactor(server): externalize jackson serializers into dedicated module&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Release v0.4</title>
      <link>https://streamthoughts.github.io/azkarra-streams/blog/2019/12/02/release-v0.4/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/azkarra-streams/blog/2019/12/02/release-v0.4/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Azkarra Streams v0.4 is now available!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Below is a summary of the issues addressed in the 0.4 release of Azkarra Streams.&lt;/p&gt;
&lt;h2 id=&#34;streams&#34;&gt;Streams&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;New Feature&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/5&#34;&gt;AZKARRA-5&lt;/a&gt;] - Add new option &lt;code&gt;enable.wait.for.topics&lt;/code&gt; to wait for source topics to be created before starting Kafka Streams instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;api&#34;&gt;API&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Improvement&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/3&#34;&gt;AZKARRA-3&lt;/a&gt;] - MapConf should support type conversion. This fixes a ClassCastException that was thrown when arguments were passed to the application (e.g &amp;ndash;azkarra.server.port 8082).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ui&#34;&gt;UI&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;New Feature&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/11&#34;&gt;AZKARRA-11&lt;/a&gt;] - Add new option &lt;code&gt;server.enable.ui&lt;/code&gt; for disable/enable Web UI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Improvement&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/9&#34;&gt;AZKARRA-9&lt;/a&gt;] - Prevent browser from opening auth popup when Basic authentication is configured.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Bug&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Javascript] - Prevent the HTML form used to query state stores from being submitted.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;security&#34;&gt;Security&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;New Feature&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/7&#34;&gt;AZKARRA-7&lt;/a&gt;] - Add new option &lt;code&gt;rest.authentication.basic.silent&lt;/code&gt; to enable silent basic authentication (default false).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Improvement&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/streamthoughts/azkarra-streams/issues/1&#34;&gt;AZKARRA-1&lt;/a&gt;] - Obfuscate sensitive configuration (i.e password) returned in JSON HTTP response.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Introducing Azkarra Streams</title>
      <link>https://streamthoughts.github.io/azkarra-streams/blog/2019/11/27/introducing-azkarra-streams/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/azkarra-streams/blog/2019/11/27/introducing-azkarra-streams/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Today, we are excited to announce Azkarra Streams&lt;/strong&gt;, a new open-source micro Java framework that let you focus on writing Kafka Streams topologies code, not boilerplate code necessary for executing them.&lt;/p&gt;







&lt;div class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 510px&#34;&gt;
	&lt;img class=&#34;card-img-top&#34; src=&#34;https://streamthoughts.github.io/azkarra-streams/azkarra-streams/blog/2019/11/27/introducing-azkarra-streams/logo_hu942fcf0762aa07b10165e100bb9d2011_26944_500x200_fill_catmullrom_smart1_2.png&#34; width=&#34;500&#34; height=&#34;200&#34;&gt;
	
	&lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
		&lt;p class=&#34;card-text&#34;&gt;
&lt;small class=&#34;text-muted&#34;&gt;&lt;br/&gt;Photo: Azkarra Streams Logo&lt;/small&gt;&lt;/p&gt;
	&lt;/div&gt;
	
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The complete blog post can found here :&lt;/strong&gt; &lt;a href=&#34;https://medium.com/streamthoughts/introducing-azkarra-streams-the-first-micro-framework-for-apache-kafka-streams-e13605f3a3a6&#34;&gt;introducing-azkarra-streams-the-first-micro-framework-for-apache-kafka-streams&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Release v0.3</title>
      <link>https://streamthoughts.github.io/azkarra-streams/blog/2019/11/21/release-v0.3/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/azkarra-streams/blog/2019/11/21/release-v0.3/</guid>
      <description>
        
        
        &lt;p&gt;Azkarra Streams v0.3 is now available!&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
